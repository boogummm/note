day20课堂笔记

1、final关键字
	1.1、final修饰的类无法继承。
	1.2、final修饰的方法无法覆盖。
	1.3、final修饰的变量只能赋一次值。
	1.4、final修饰的引用一旦指向某个对象，则不能再重新指向其它对象，但该引用
	指向的对象内部的数据是可以修改的。
	1.5、final修饰的实例变量必须手动初始化，不能采用系统默认值。
	1.6、final修饰的实例变量一般和static联合使用，称为常量。
			public static final double PI = 3.1415926;

2、抽象类和接口以及抽象类和接口的区别。

	2.1、抽象类
		第一：抽象类怎么定义？在class前添加abstract关键字就行了。
		第二：抽象类是无法实例化的，无法创建对象的，所以抽象类是用来被子类继承的。
		第三：final和abstract不能联合使用，这两个关键字是对立的。
		第四：抽象类的子类可以是抽象类。也可以是非抽象类。
		第五：抽象类虽然无法实例化，但是抽象类有构造方法，这个构造方法是供子类使用的。
		第六：抽象类中不一定有抽象方法，抽象方法必须出现在抽象类中。
		第七：抽象方法怎么定义？
			public abstract void doSome();
		第八（*****五颗星）：一个非抽象的类，继承抽象类，必须将抽象类中的抽象方法进行覆盖/重写/实现。

		到目前为止，只是学习了抽象类的基础语法，一个类到底声明为抽象还是非抽象，
		这个以后慢慢来吧。写代码多的时候，自然就理解了。

		面试题（判断题）：java语言中凡是没有方法体的方法都是抽象方法。
			不对，错误的。
			Object类中就有很多方法都没有方法体，都是以“;”结尾的，但他们
			都不是抽象方法，例如：
				public native int hashCode();
				这个方法底层调用了C++写的动态链接库程序。
				前面修饰符列表中没有：abstract。有一个native。表示调用JVM本地程序。

	2.2、接口的基础语法。
		1、接口是一种“引用数据类型”。
		2、接口是完全抽象的。
		3、接口怎么定义：[修饰符列表] interface 接口名{}
		4、接口支持多继承。
		5、接口中只有常量+抽象方法。
		6、接口中所有的元素都是public修饰的
		7、接口中抽象方法的public abstract可以省略。
		8、接口中常量的public static final可以省略。
		9、接口中方法不能有方法体。

	2.3、接口在开发中的作用。
		