day30课堂笔记

1、掌握Map接口中常用方法。

2、遍历Map集合的两种方式都要精通。
	第一种：获取所有key，遍历每个key，通过key获取value.
	第二种：获取Set<Map.Entry>即可，遍历Set集合中的Entry
		调用entry.getKey() entry.getValue()

3、了解哈希表数据结构。

4、存放在HashMap集合key部分和HashSet集合中的元素需要同时重写hashCode和equals。


5、HashMap和Hashtable的区别。
	HashMap：
		初始化容量16，扩容2倍。
		非线程安全
		key和value可以为null。

	Hashtable（类）
		初始化容量11，扩容2倍+1
		线程安全
		key和value都不能是null。

6、Properties类（继承hashTable）的常用两个方法。
	setProperty
	getProperty

7、了解自平衡二叉查找树数据结构（如红黑树，TreeMap基于红黑树实现）。
	a.二叉查找树：默认左小右大原则存储。
	b.红黑树的性质：节点是红色或黑色。
			根是黑色。
			所有叶子都是黑色(叶子是NIL节点)。
			*每个红色节点必须有两个黑色的子节点。(从每个叶子到根的所有路径上不能有两个连续的红色节点。)
			*从任一节点到其每个叶子的所有简单路径都包含相同数目的黑色节点(简称黑高)。


8、TreeMap的key或者TreeSet集合中的元素要想排序，有两种实现方式：
	第一种：key类实现(implement)java.lang.Comparable接口。需重写compareTo()方法
	第二种：单独编写一个比较器Comparator接口传入TreeMap或者TreeSet。需重写compare()方法

9、集合工具类Collections:
	（1）synchronizedList+synchronizedMap+synchronizedSet方法：变为线程安全
	（2）list排序的两种方式：
		Collections.sort(list,Comparator<T>）; 集合中元素实现Comparable接口也可以
		list.sort(Comparator<T>);

补充：	
10.在Jdk1.8后，HashMap的数据结构的存储由数组+链表的方式，变化为数组+链表+红黑树的存储方式，当链表长度超过阈值8时，将链表转换为红黑树。在性能上进一步得到提升。
