day19课堂笔记

1、使用集成开发工具eclipse
	
	1.1、java的集成开发工具很多，包括：eclipse、Intellij IDEA、netbeans.....

		eclipse：
			IBM开发的。eclipse翻译为：日食。寓意吞并SUN公司（SUN是太阳。）
			最终没有成功，SUN公司在2009年的时候被oracle甲骨文公司收购。
			eclipse在以前的开发中使用非常多，但是由于IDEA工具的出现，让eclipse
			的用户大大减少，目前eclipse占市场份额30%。IDEA占市场份额60%，
			剩下10%是其他的开发工具。
		
		Intellij IDEA：
			提示功能比eclipse强大。更好用。


	1.2、什么是集成开发工具？
		集成开发工具又称为集成开发环境，把开发中需要的东西全部集成在一起，
		包括编写代码时大量的代码提示，及时的编译，程序员编写代码之后，集成
		开发工具自动编译，有语法错误的时候集成开发工具会马上标红色。运行的
		时候也不需要命令，直接使用鼠标操作即可。总之集成开发工具就是为了提高
		开发速度。另外集成开发工具会为程序员生成很多代码，有很多代码不需要写。
			及时编译
			语法错误及时提醒
			代码提示功能
			代码自动生成功能
			方便的运行
			.....
	
	1.3、eclipse的安装：
		我的eclipse是一个解压版的。直接解压就能用。
		使用当前的这个eclipse的时候，需要计算机上已经安装了JDK，并且bin目录已经配置到path当中。
		解压之后：eclipse.exe 是启动eclipse开发工具的。
	
	1.4、eclipse工具的使用
		* 第一次打开eclipse的时候，会让你选择工作区，工作区就是java代码存放的位置。
			默认位置：C:\Users\Administrator\eclipse-workspace
			你可以修改成其他位置，没问题。
			我这里改一下：D:\course\JavaProjects\02-JavaSE\eclipsecode
			选择工作区的窗口左下角有一个复选框：
				这个复选框选中表示下一次再打开eclipse的时候默认进入这个工作区。不再询问。
				我这里就不选中了。（让他每一次询问。）

		* 打开之后，会呈现一个：welcome，（直接关闭即可）

		* 关闭welcome之后，默认的布局方式：javaee方式，我们目前是javase，怎么切换
		布局方式到javase呢？
			点击右上角倒数第二个小图标，打开一个窗口，选择java。
		
		* 我把这个javase布局中所有没有用的窗口全部关闭：
			只留下：package explorer
			一不小心把：package explorer关闭了怎么办？
				可以再打开：window菜单 --> show view--> package explorer
		
		* 一个布局打乱了，能重置吗？手机恢复出厂设置....
			window菜单 --> Perspective --> reset.....
		
		* 在eclipse的workspace工作区当中以project（工程）为单位。所以要编写
		java代码，必须先新建工程。在工程上编写代码：
			怎么创建工程？
				在package explorer窗口的空白位置右键 --> new --> java project
			
			新建工程（java project）的时候：
				需要指定：
					工程的名字：我这里起名javase
					选择JRE，当前eclipse默认选择的是JRE11.(我电脑上没有，这个应该是eclipse自带的。)
					JRE(java的运行环境。)
				目前为止：大家只要指定工程名字就行，别的不用修改。
				直接finish，就新建工程完成了。
			
			注意：最后一步finish的时候，会提醒你是否创建java文件，可以创建，也可以不创建。
		
		* 怎么删除工程？
			工程上右键--> delete --> 弹出窗口之后，选中复选框表示彻底删除（硬盘上也删了。）
		
		* 编写第一个HelloWorld程序
			在src上点击右键--> new --> Class :
				填写上类名：HelloWorld
				在下面有一个选中创建main方法。选中表示自动创建main方法。
				finish完成。

		* 出现了兼容问题：
			eclipse（2018-12的版本），不支持JDK11以及更高版本。
			我这里先这样处理一下：下载一个低版本的JDK，选择JDK8.
		
		* 安装了JDK8之后，再重新在eclipse中创建java project。
			怎么在eclipse当中指定使用某个JRE/JDK呢？
				在新建工程的窗口上有一个：Configure jres....
				弹出的窗口中：add 
				add之后选择：standard vm
				然后next
				在弹出的窗口中点击：Directory
				目录选中这个即可：C:\Program Files\Java\jdk1.8.0_101
				别的位置不用动。
				finish.
				完成的过程中：你要记得把jdk8的对勾打上。
				apply and close...
		
		* 一会我给大家分享一个高版本的eclipse。能够让eclipse支持高版本的JDK。

		* eclipse设置字体：
			window菜单--->最后一个-->窗口上输入font-->选中color and font
			--> basic -->  最后一个双击。
		
		* eclipse是实时编译的，有语法错误会报红。

		* 注意：eclipse有的时候是必须保存之后才会编译的。要时刻ctrl + s

		* main方法怎么生成？
			main，然后alt + /
		
		* System.out.println()怎么生成？
			sysout ，然后atl + /
		
		* 怎么运行：
			在有main方法的程序上右键 --> run as --> java application..
		
		* 怎么生成构造方法
			在空白处右键 --> source --> generate constructor

		* 怎么生成set和get方法
			在空白处右键 --> source --> generate setter and getter
		
		* eclipse默认情况下，当你“点”的时候都会有提示。
		

2、回顾从面向对象开始到目前讲解的位置，将所有的结论总结出来。
	
	2.1、强调一下学习方法

		第一：上课过程中要记笔记（但是笔记一定要记简笔），笔记上最好没有废话，
		笔记上记的全是结论。有一些是需要死记硬背的，有一些是需要理解记忆的。
		总之最后不管是死记硬背还是理解记忆，都是需要“记忆”的。（听课不走神，
		集中精力捕捉重点结论。）

		第二：课下整理笔记（快速的整理），一天的笔记整理要在30分钟之内完成。

		第三：别抄老师代码。根据笔记上整理的重要“结论”，一个结论一个结论去验证，
		验证这个结论的时候，写属于自己的代码。（验证的时候脑子要灵光一些，这样
		试验一下，那样试验一下，想尽一切办法推翻结论，如果最终结论没有被推翻，
		说明这个结论没毛病。）

		第四：只有上课中所有的结论都已经验证完毕了，你剩下的时间再去考虑作业题。
		作业题做不做都行，作业是次要的，课堂上的结论是重要的。
	
	2.2、回顾所有结论
		
		第八章重点以及结论：
			重点：
				什么是类？一个模板
				什么是对象？真实存在的，通过模板创建的
				什么是实例？对象就是实例
				怎么定义类？

			结论：
				定义类的语法机制：
					[修饰符列表] class 类名 {
						类体 = 属性+方法;
					}
				属性来源于状态（属性描述状态）
				方法来源于动作（方法描述动作）

			课下思考：
				现实生活中有哪些对象？
				对象上有哪些属性？
				对象有什么行为？
				如果用java代码应该怎么描述？
		
		第九章 对象的创建和使用

			重点以及结论：

				怎么创建对象？
					new 类名();

				怎么使用对象？
					需要将创建的对象赋值给一个变量。
					而这个变量被称为引用。
					怎么使用对象？“引用.”，死记硬背，使用对象的时候，就用“引用.”就行了。

				构造方法怎么定义？
					语法需要记忆：
						[修饰符列表] 构造方法名(形参){
							构造方法体;
						}

				构造方法怎么调用？
					new
					语法： new 构造方法名(实参);

				构造方法的方法体中写什么？
					给属性赋值。

				构造方法的重要结论：
					一个类没有提供任何构造方法，会有一个默认的无参的。
					一个类提供了构造方法，系统就不再默认提供无参构造了。
					建议把无参构造写出来。

				空指针异常怎么发生的？
					“空引用”访问“实例”相关的就会出现空指针异常。

				方法调用时参数是怎么传递的？
					方法调用的时候参数传递一定是将变量中保存的那个值
					复制一份传过去。可能这个值是100，可能这个值是一个
					对象的内存地址：0x1234

				一个java程序执行过程的内存图（对象的创建）？（实在搞不定就放弃先。）
		
		第十章 封装
			重点以及结论？
				怎么封装：
					属性私有化
					对外提供公开的set和get方法
	
		第十一章 this关键字和static关键字
			static的重点以及结论
				static修饰的方法静态方法
				static修饰的变量静态变量
				static修饰的都用“类名.”访问。（都不需要new对象，就能访问）
				static{} 是静态代码块，在类加载时执行，并执行一次。
				{} 实例语句块，在构造方法执行前执行，构造一次执行一次。

				static的也能用“引用.”的方式访问，不过运行时仍然和此对象无关，
				空指针异常充分的说明了以上的结论。（用空引用访问静态的不会出现空指针异常）

			this的重点以及结论
				this用法就两个：this. 和 this()
				this不能用在静态方法中。只能使用在实例方法中。
				this. 大部分可以省略，区分局部变量和实例变量的时候不能省略。
				this() 只能出现在构造方法第一行，通过当前构造方法调用本类其它构造方法，代码复用。
		
		第十二章 继承
			重点以及结论
				语法怎么实现？
					extends关键字
				单继承
				默认继承Object
				自己验证一下子类继承父类之后，用子类能不能调用继承过来的方法。

		第十三章 方法覆盖和多态

			方法覆盖的重点以及结论

				代码怎么写方法就能覆盖。
					继承关系需要有
					相同的返回值类型，相同的方法名，相同参数列表。

				方法覆盖之后，子类对象执行的一定是覆盖之后的方法。
				结论写出来了，你需要自己编代码验证一下这个结论是否正确。

			多态的重点以及结论
				无论向上转型还是向下转型，都要有继承关系。
				Animal a = new Cat();
				a.move(); 编译阶段和运行阶段绑定的move方法不一样。（向上转型）

				if(a instanceof Cat){ // 什么时候必须向下转型？？？？
					Cat c = (Cat)a;  // 向下转型之前养成什么好习惯？？？
				}

				有同学有疑问？
					我不理解怎么用！！！！
					以后到处都用多态，你只要记住这个就行。
					心里一直想着一件事：能用多态就用多态。。。。。
					尽量使用。用着用着你就明白了。。。。。。
					我最初学习多态的时候也不理解多态有什么用。。。
				
				放弃式的学习要会！！！！！不会的先放一放，凑合能让自己代码编写就行。
		
		第十四章 super

			重点以及结论

				super的用法：super. 和 super()

				super. 大部分可以省略，当父子都有相同的属性和方法时，
				在子类中访问父类的特征时，必须使用super.

				一个构造方法第一行啥也没有，自动会有一个super()

				super不能出现在静态方法中，只能是实例方法。

				super()是干啥的：是通过子类的构造方法调用父类的构造方法。

-----------------------------------------------------------------------------------------------------


1、关于java的集成开发环境：
	eclipse、IntelliJ IDEA等。
	其中目前主流的集成开发环境是：IntelliJ IDEA

	这只是一个工具，不要让一个工具把你难住了。
	开发工具不要使用汉化版，太low。
	英语单词太多别害怕，记位置。（一共就那几个主要的操作位置。）

2、安装IDEA工具
	自己课下按照破解文档进行破解。

3、IDEA工具的使用：

	第一次打开的时候：会弹出一个窗口（import idea settings）
		这个表示导入idea的设置，但我们是第一次使用idea工具，
		没有设置过idea，所以这里选择：do not import setting...不导入设置。
	
	第二步：会让你接受条款，接受即可。
	
	第三步：don't send

	第四步：一直下一步（最终选择免费试用30天。）

	第五步：可能会让你填写email等信息，这里不填写，继续continue。

	第六步：弹出welcome窗口
		点击create new project
		注意：在IDEA当中一个project相当于eclipse当中的一个workspace。
	
	第七步：新建一个Empty Project
		新建一个空的工程，选择创建工程窗口下面“最后的那一项”，Empty Project
	
	第八步：给空的工程起一个名字：javase
		存储到：C:\Users\Administrator\IdeaProjects\javase
		点击finish。
	
	第九步：自动弹出一个每日提示，这个每日提示可以取消掉。以后每一次打开就不再提示了。

	第十步：会自动弹出一个：project structure，这个窗口先取消掉。

	第十一步：在空的工程下新建Module（模块），IDEA中模块类似于eclipse当中的project。
		eclipse的组织方式：
			workspace--> project
		idea的组织方式：
			project --> module
		
		怎么创建module?
			file菜单-->new --> Module
		
	第十二步：在New Module窗口上点击左上角的java，然后next

	第十三步：给module起一个名字：chapter15

	第十四步：编写代码，在src目录下新建类，写代码，并运行。

4、关于IDEA工具的快捷键以及一些简单的设置

	4.1、字体设置
		file --> settings --> 输入font --> 设置字体样式以及字号大小。
	
	4.2、快速生成main方法
		psvm
	
	4.3、快速生成System.out.println()
		sout 
	
	4.4、注意：IDEA是自动保存，不需要ctrl + s

	4.5、删除一行
		ctrl + y
	
	4.6、怎么运行：
		代码上右键-->run
		或者点击左侧的绿色箭头。
		ctrl + shift + F10
	
	4.7、左侧窗口中的列表怎么展开？怎么关闭？
		左箭头关闭。
		右箭头展开。
		上下箭头移动。
	
	4.8、idea中退出任何窗口，都可以使用esc键盘。（esc就是退出）

	4.9、任何新增/新建/添加的快捷键是：
		alt + insert
	
	4.10、窗口变大，变小：
		ctrl + shift + F12
	
	4.11、切换java程序：从HelloWorld切换到User
		alt + 右箭头 
		或者
		alt + 左箭头
	
	4.12、切换窗口：
		alt + 标号
		alt + 1（打开，关闭）
		alt + 2

	4.13、提示方法的参数：ctrl + p

	4.14、注释：
		单行注释：ctrl + /
		多行注释：ctrl + shift + /
	
	4.15、idea中怎么定位方法/属性/变量？
		光标停到某个单词的下面，这个单词可能是：
			方法名、变量名
		停到单词下面之后，按ctrl键，出现下划线，点击跳转。

	4.16、idea当中复制一行是ctrl + d

	

		

































































